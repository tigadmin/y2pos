{"remainingRequest":"/Users/nsi/WebstormProjects/yumaspos-2021/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nsi/WebstormProjects/yumaspos-2021/src/components/RestaurantOnlineOrdering3.vue?vue&type=template&id=17a5431b&scoped=true&","dependencies":[{"path":"/Users/nsi/WebstormProjects/yumaspos-2021/src/components/RestaurantOnlineOrdering3.vue","mtime":1700521145004},{"path":"/Users/nsi/WebstormProjects/yumaspos-2021/node_modules/cache-loader/dist/cjs.js","mtime":1687177353478},{"path":"/Users/nsi/WebstormProjects/yumaspos-2021/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1687182380623},{"path":"/Users/nsi/WebstormProjects/yumaspos-2021/node_modules/cache-loader/dist/cjs.js","mtime":1687177353478},{"path":"/Users/nsi/WebstormProjects/yumaspos-2021/node_modules/vue-loader/lib/index.js","mtime":1687182380623}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}